@model SuiviEvaluation.Web.Models.Bilan

@{
    ViewData["Title"] = "Ajouter un Bilan Complet";
    var evolutionIndex = 0;
    var fluxIndex = 0;
    var quantiteIndex = 0;
}

<h2>Ajouter un Bilan Complet</h2>

<form asp-action="Create" method="post">
    <h3>1. Évolutions temporelles</h3>
    <div id="evolution-container">
        @for (int i = 0; i < Model.Evolution.Count(); i++)
        {
            <div class="evolution-item border p-2 mb-2">
                <label>Date de démarrage</label>
                <input asp-for="Evolution[@i].DateDeDemmarage" class="form-control" type="date" />
                <label>Date d’achèvement prévue</label>
                <input asp-for="Evolution[@i].DateAchevementPrevue" class="form-control" type="date" />
                <button type="button" class="btn btn-danger btn-sm mt-2 remove-evolution">Supprimer</button>
            </div>
        }
    </div>
    <button type="button" class="btn btn-primary btn-sm" id="add-evolution">Ajouter une évolution</button>

    <h3>2. Flux Financiers</h3>
    <div id="flux-container">
        @for (int i = 0; i < Model.FluxFinanciers.Count(); i++)
        {
            <div class="flux-item border p-2 mb-2">
                <label>Total autorisation</label>
                <input asp-for="FluxFinanciers[@i].TotalAutorisation" class="form-control" />
                <label>Total décaissement</label>
                <input asp-for="FluxFinanciers[@i].TotalDecaissement" class="form-control" />
                <label>Total dépense</label>
                <input asp-for="FluxFinanciers[@i].TotalDepense" class="form-control" />
                <button type="button" class="btn btn-danger btn-sm mt-2 remove-flux">Supprimer</button>
            </div>
        }
    </div>
    <button type="button" class="btn btn-primary btn-sm" id="add-flux">Ajouter un flux</button>

    <h3>3. Quantités Livrées</h3>
    <div id="quantite-container">
        @for (int i = 0; i < Model.QuantitesLivrees.Count(); i++)
        {
            <div class="quantite-item border p-2 mb-2">
                <label>Année</label>
                <input asp-for="QuantitesLivrees[@i].IdQuantiteLivreeParAnnee" class="form-control" />
                <label>Quantité</label>
                <input asp-for="QuantitesLivrees[@i].AnneeQuantiteLivree" class="form-control" />
                <label>Unité</label>
                <input asp-for="QuantitesLivrees[@i].ValeurLivree" class="form-control" />
                <button type="button" class="btn btn-danger btn-sm mt-2 remove-quantite">Supprimer</button>
            </div>
        }
    </div>
    <button type="button" class="btn btn-primary btn-sm" id="add-quantite">Ajouter une quantité</button>

    <br /><br />
    <button type="submit" class="btn btn-success">Enregistrer</button>
    <a asp-action="Index" class="btn btn-secondary">Annuler</a>
</form>

@section Scripts {
    <script>
        let evolutionIndex = @Model.Evolution.Count();
        let fluxIndex = @Model.FluxFinanciers.Count();
        let quantiteIndex = @Model.QuantitesLivrees.Count();

        document.getElementById('add-evolution').addEventListener('click', function () {
            const container = document.getElementById('evolution-container');
            container.insertAdjacentHTML('beforeend',
                `<div class="evolution-item border p-2 mb-2">
                            <label>Date de démarrage</label>
                            <input name="Evolution[${evolutionIndex}].DateDeDemmarage" class="form-control" type="date" />
                            <label>Date d’achèvement prévue</label>
                            <input name="Evolution[${evolutionIndex}].DateAchevementPrevue" class="form-control" type="date" />
                            <button type="button" class="btn btn-danger btn-sm mt-2 remove-evolution">Supprimer</button>
                        </div>`);
            evolutionIndex++;
        });

        document.getElementById('add-flux').addEventListener('click', function () {
            const container = document.getElementById('flux-container');
            container.insertAdjacentHTML('beforeend',
                `<div class="flux-item border p-2 mb-2">
                            <label>Total autorisation</label>
                            <input name="FluxFinanciers[${fluxIndex}].TotalAutorisation" class="form-control" />
                            <label>Total décaissement</label>
                            <input name="FluxFinanciers[${fluxIndex}].TotalDecaissement" class="form-control" />
                            <label>Total dépense</label>
                            <input name="FluxFinanciers[${fluxIndex}].TotalDepense" class="form-control" />
                            <button type="button" class="btn btn-danger btn-sm mt-2 remove-flux">Supprimer</button>
                        </div>`);
            fluxIndex++;
        });

        document.getElementById('add-quantite').addEventListener('click', function () {
            const container = document.getElementById('quantite-container');
            container.insertAdjacentHTML('beforeend',
                `<div class="quantite-item border p-2 mb-2">
                            <label>Année</label>
                            <input name="QuantitesLivrees[${quantiteIndex}].Annee" class="form-control" />
                            <label>Quantité</label>
                            <input name="QuantitesLivrees[${quantiteIndex}].Quantite" class="form-control" />
                            <label>Unité</label>
                            <input name="QuantitesLivrees[${quantiteIndex}].Unite" class="form-control" />
                            <button type="button" class="btn btn-danger btn-sm mt-2 remove-quantite">Supprimer</button>
                        </div>`);
            quantiteIndex++;
        });

        document.addEventListener('click', function (e) {
            if (e.target.matches('.remove-evolution')) e.target.closest('.evolution-item').remove();
            if (e.target.matches('.remove-flux')) e.target.closest('.flux-item').remove();
            if (e.target.matches('.remove-quantite')) e.target.closest('.quantite-item').remove();
        });
    </script>
}
